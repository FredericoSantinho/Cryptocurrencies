package neuro.cryptocurrencies.di

import dagger.Module
import dagger.Provides
import dagger.hilt.InstallIn
import dagger.hilt.components.SingletonComponent
import neuro.cryptocurrencies.domain.repository.coin.GetCoinTickerRepository
import neuro.cryptocurrencies.domain.repository.coin.GetCoinTickersRepository
import neuro.cryptocurrencies.domain.repository.coin.HasCachedCoinsTickersRepository
import neuro.cryptocurrencies.domain.repository.coin.ObserveCoinsTickersRepository
import neuro.cryptocurrencies.domain.repository.coin.SaveCoinsTickersRepository
import neuro.cryptocurrencies.domain.repository.coin.details.GetCoinDetailsRepository
import neuro.cryptocurrencies.domain.repository.coin.details.HasCachedCoinDetailsRepository
import neuro.cryptocurrencies.domain.repository.coin.details.ObserveCoinDetailsRepository
import neuro.cryptocurrencies.domain.repository.coin.details.SaveCoinDetailsWithPriceRepository
import neuro.cryptocurrencies.domain.repository.tag.GetTagDetailsRepository
import neuro.cryptocurrencies.domain.repository.tag.HasCachedTagDetailsRepository
import neuro.cryptocurrencies.domain.repository.tag.ObserveTagDetailsRepository
import neuro.cryptocurrencies.domain.repository.tag.SaveTagDetailsRepository
import neuro.cryptocurrencies.domain.usecase.coinDetails.FetchCoinDetailsUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.coinDetails.HasCachedCoinDetailsUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.coinDetails.ObserveCoinDetailsUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.coinTickers.FetchCoinsTickersUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.coinTickers.HasCachedCoinsTickersUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.coinTickers.ObserveCoinsTickersUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.tagDetails.FetchTagDetailsUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.tagDetails.HasCachedTagDetailsUseCaseImpl
import neuro.cryptocurrencies.domain.usecase.tagDetails.ObserveTagDetailsUseCaseImpl

@InstallIn(SingletonComponent::class)
@Module
class UseCaseImplModule {

	@Provides
	fun provideObserveCoinsTickersUseCaseImpl(observeCoinsTickersRepository: ObserveCoinsTickersRepository) =
		ObserveCoinsTickersUseCaseImpl(observeCoinsTickersRepository)

	@Provides
	fun provideFetchCoinsTickersUseCaseImpl(
		getCoinTickersRepository: GetCoinTickersRepository,
		saveCoinsTickersRepository: SaveCoinsTickersRepository
	) = FetchCoinsTickersUseCaseImpl(getCoinTickersRepository, saveCoinsTickersRepository)

	@Provides
	fun provideHasCachedCoinsTickersUseCaseImpl(hasCachedCoinsTickersRepository: HasCachedCoinsTickersRepository) =
		HasCachedCoinsTickersUseCaseImpl(hasCachedCoinsTickersRepository)

	@Provides
	fun provideObserveCoinDetailsUseCaseImpl(observeCoinDetailsRepository: ObserveCoinDetailsRepository) =
		ObserveCoinDetailsUseCaseImpl(observeCoinDetailsRepository)

	@Provides
	fun provideFetchCoinDetailsUseCaseImpl(
		getCoinTickerRepository: GetCoinTickerRepository,
		getCoinDetailsRepository: GetCoinDetailsRepository,
		saveCoinDetailsWithPriceRepository: SaveCoinDetailsWithPriceRepository
	) = FetchCoinDetailsUseCaseImpl(
		getCoinTickerRepository,
		getCoinDetailsRepository,
		saveCoinDetailsWithPriceRepository
	)

	@Provides
	fun provideHasCachedCoinDetailsUseCaseImpl(hasCachedCoinDetailsRepository: HasCachedCoinDetailsRepository) =
		HasCachedCoinDetailsUseCaseImpl(hasCachedCoinDetailsRepository)

	@Provides
	fun provideObserveTagDetailsUseCaseImpl(observeTagDetailsRepository: ObserveTagDetailsRepository) =
		ObserveTagDetailsUseCaseImpl(observeTagDetailsRepository)

	@Provides
	fun provideFetchTagDetailsUseCaseImpl(
		getTagDetailsRepository: GetTagDetailsRepository,
		saveTagDetailsRepository: SaveTagDetailsRepository
	) = FetchTagDetailsUseCaseImpl(getTagDetailsRepository, saveTagDetailsRepository)

	@Provides
	fun provideHasCachedTagDetailsUseCaseImpl(hasCachedTagDetailsRepository: HasCachedTagDetailsRepository) =
		HasCachedTagDetailsUseCaseImpl(hasCachedTagDetailsRepository)
}